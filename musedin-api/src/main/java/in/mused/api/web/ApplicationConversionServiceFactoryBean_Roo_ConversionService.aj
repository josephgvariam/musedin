// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package in.mused.api.web;

import in.mused.api.domain.Activity;
import in.mused.api.domain.Library;
import in.mused.api.domain.Player;
import in.mused.api.domain.Playlist;
import in.mused.api.domain.Song;
import in.mused.api.domain.User;
import in.mused.api.domain.UserConnection;
import in.mused.api.service.LibraryService;
import in.mused.api.service.PlayerService;
import in.mused.api.service.PlaylistService;
import in.mused.api.service.SecurityService;
import in.mused.api.service.SongService;
import in.mused.api.service.UserConnectionService;
import in.mused.api.web.ApplicationConversionServiceFactoryBean;
import org.bson.types.ObjectId;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    LibraryService ApplicationConversionServiceFactoryBean.libraryService;
    
    @Autowired
    PlayerService ApplicationConversionServiceFactoryBean.playerService;
    
    @Autowired
    PlaylistService ApplicationConversionServiceFactoryBean.playlistService;
    
    @Autowired
    SongService ApplicationConversionServiceFactoryBean.songService;
    
    @Autowired
    SecurityService ApplicationConversionServiceFactoryBean.securityService;
    
    @Autowired
    UserConnectionService ApplicationConversionServiceFactoryBean.userConnectionService;
    
    public Converter<Activity, String> ApplicationConversionServiceFactoryBean.getActivityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<in.mused.api.domain.Activity, java.lang.String>() {
            public String convert(Activity activity) {
                return new StringBuilder().append(activity.getMsg()).append(' ').append(activity.getCode()).append(' ').append(activity.getTstamp()).toString();
            }
        };
    }
    
    public Converter<String, Activity> ApplicationConversionServiceFactoryBean.getStringToActivityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, in.mused.api.domain.Activity>() {
            public in.mused.api.domain.Activity convert(String id) {
                return getObject().convert(getObject().convert(id, ObjectId.class), Activity.class);
            }
        };
    }
    
    public Converter<Library, String> ApplicationConversionServiceFactoryBean.getLibraryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<in.mused.api.domain.Library, java.lang.String>() {
            public String convert(Library library) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<ObjectId, Library> ApplicationConversionServiceFactoryBean.getIdToLibraryConverter() {
        return new org.springframework.core.convert.converter.Converter<org.bson.types.ObjectId, in.mused.api.domain.Library>() {
            public in.mused.api.domain.Library convert(org.bson.types.ObjectId id) {
                return libraryService.findLibrary(id);
            }
        };
    }
    
    public Converter<String, Library> ApplicationConversionServiceFactoryBean.getStringToLibraryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, in.mused.api.domain.Library>() {
            public in.mused.api.domain.Library convert(String id) {
                return getObject().convert(getObject().convert(id, ObjectId.class), Library.class);
            }
        };
    }
    
    public Converter<Player, String> ApplicationConversionServiceFactoryBean.getPlayerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<in.mused.api.domain.Player, java.lang.String>() {
            public String convert(Player player) {
                return new StringBuilder().append(player.getCode()).append(' ').append(player.getUserId()).append(' ').append(player.getName()).append(' ').append(player.getDescription()).toString();
            }
        };
    }
    
    public Converter<ObjectId, Player> ApplicationConversionServiceFactoryBean.getIdToPlayerConverter() {
        return new org.springframework.core.convert.converter.Converter<org.bson.types.ObjectId, in.mused.api.domain.Player>() {
            public in.mused.api.domain.Player convert(org.bson.types.ObjectId id) {
                return playerService.findPlayer(id);
            }
        };
    }
    
    public Converter<String, Player> ApplicationConversionServiceFactoryBean.getStringToPlayerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, in.mused.api.domain.Player>() {
            public in.mused.api.domain.Player convert(String id) {
                return getObject().convert(getObject().convert(id, ObjectId.class), Player.class);
            }
        };
    }
    
    public Converter<Playlist, String> ApplicationConversionServiceFactoryBean.getPlaylistToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<in.mused.api.domain.Playlist, java.lang.String>() {
            public String convert(Playlist playlist) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<ObjectId, Playlist> ApplicationConversionServiceFactoryBean.getIdToPlaylistConverter() {
        return new org.springframework.core.convert.converter.Converter<org.bson.types.ObjectId, in.mused.api.domain.Playlist>() {
            public in.mused.api.domain.Playlist convert(org.bson.types.ObjectId id) {
                return playlistService.findPlaylist(id);
            }
        };
    }
    
    public Converter<String, Playlist> ApplicationConversionServiceFactoryBean.getStringToPlaylistConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, in.mused.api.domain.Playlist>() {
            public in.mused.api.domain.Playlist convert(String id) {
                return getObject().convert(getObject().convert(id, ObjectId.class), Playlist.class);
            }
        };
    }
    
    public Converter<Song, String> ApplicationConversionServiceFactoryBean.getSongToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<in.mused.api.domain.Song, java.lang.String>() {
            public String convert(Song song) {
                return new StringBuilder().append(song.getFileName()).append(' ').append(song.getTitle()).append(' ').append(song.getArtist()).append(' ').append(song.getAlbum()).toString();
            }
        };
    }
    
    public Converter<ObjectId, Song> ApplicationConversionServiceFactoryBean.getIdToSongConverter() {
        return new org.springframework.core.convert.converter.Converter<org.bson.types.ObjectId, in.mused.api.domain.Song>() {
            public in.mused.api.domain.Song convert(org.bson.types.ObjectId id) {
                return songService.findSong(id);
            }
        };
    }
    
    public Converter<String, Song> ApplicationConversionServiceFactoryBean.getStringToSongConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, in.mused.api.domain.Song>() {
            public in.mused.api.domain.Song convert(String id) {
                return getObject().convert(getObject().convert(id, ObjectId.class), Song.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<in.mused.api.domain.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getUsername()).append(' ').append(user.getDisplayname()).append(' ').append(user.getEmail()).append(' ').append(user.getPassword()).toString();
            }
        };
    }
    
    public Converter<ObjectId, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<org.bson.types.ObjectId, in.mused.api.domain.User>() {
            public in.mused.api.domain.User convert(org.bson.types.ObjectId id) {
                return securityService.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, in.mused.api.domain.User>() {
            public in.mused.api.domain.User convert(String id) {
                return getObject().convert(getObject().convert(id, ObjectId.class), User.class);
            }
        };
    }
    
    public Converter<UserConnection, String> ApplicationConversionServiceFactoryBean.getUserConnectionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<in.mused.api.domain.UserConnection, java.lang.String>() {
            public String convert(UserConnection userConnection) {
                return new StringBuilder().append(userConnection.getUserId()).append(' ').append(userConnection.getProviderId()).append(' ').append(userConnection.getProviderUserId()).append(' ').append(userConnection.getRank()).toString();
            }
        };
    }
    
    public Converter<ObjectId, UserConnection> ApplicationConversionServiceFactoryBean.getIdToUserConnectionConverter() {
        return new org.springframework.core.convert.converter.Converter<org.bson.types.ObjectId, in.mused.api.domain.UserConnection>() {
            public in.mused.api.domain.UserConnection convert(org.bson.types.ObjectId id) {
                return userConnectionService.findUserConnection(id);
            }
        };
    }
    
    public Converter<String, UserConnection> ApplicationConversionServiceFactoryBean.getStringToUserConnectionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, in.mused.api.domain.UserConnection>() {
            public in.mused.api.domain.UserConnection convert(String id) {
                return getObject().convert(getObject().convert(id, ObjectId.class), UserConnection.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getActivityToStringConverter());
        registry.addConverter(getStringToActivityConverter());
        registry.addConverter(getLibraryToStringConverter());
        registry.addConverter(getIdToLibraryConverter());
        registry.addConverter(getStringToLibraryConverter());
        registry.addConverter(getPlayerToStringConverter());
        registry.addConverter(getIdToPlayerConverter());
        registry.addConverter(getStringToPlayerConverter());
        registry.addConverter(getPlaylistToStringConverter());
        registry.addConverter(getIdToPlaylistConverter());
        registry.addConverter(getStringToPlaylistConverter());
        registry.addConverter(getSongToStringConverter());
        registry.addConverter(getIdToSongConverter());
        registry.addConverter(getStringToSongConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
        registry.addConverter(getUserConnectionToStringConverter());
        registry.addConverter(getIdToUserConnectionConverter());
        registry.addConverter(getStringToUserConnectionConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
